<% content_for :sidebar do %>
  <%= render :partial => 'configuration_sidebar' %>
  <% if false # {todo} %>
    <p class="explanation">For each state, you can specify whether an email is sent when a registration is moved into that state.
      If the email field for a state is left blank, no email will be sent.</p>
    <p class="explanation">Emails are written using a special formatting style called 
      <a href="http://daringfireball.net/projects/markdown/basics">Markdown</a>, which provides good looking
      HTML and text email messages.</p>  
    <p class="explanation">You can place special variables in the email, such as the registrants name or the payment instructions.  The
      variables you can use are listed below. </p>
    <ul class="mono_spaced">
      <li>{{event.amount}}</li>
      <li>{{event.fullname}}</li>
      <li>{{event.title}}</li>
      <li>{{event.receiptcode}}</li>
      <li>{{event.payment_desc}}</li>
      <li>{{event."customfieldname"}}</li>
      <li>{{payment_instructions}}</li>
    </ul>
    <p class="explanation"><br />Available in special cases</p>
    <ul class="mono_spaced">
      <li>{{event.arrival_date}}</li>
      <li>{{event.departure_date}}</li>
    </ul>
  <% end %>
<% end %>

<% case @system_email.email_type %>
  <% when 'pending' %>
    <p class="explanation">When someone registers for an event, you can decide whether they automatically get "accepted" &mdash; 
      meaning they actually have a seat reserved &mdash; or they can be placed in "pending", which means 
      their registration must first be reviewed and accepted.</p>
  <% when 'accepted' %>
    <p class="explanation">When you either accept a registration, or you did not require the registration to be reviewed, 
      this is the state the registration will be in.  It indicates the person has a reserved seat in
      the event/course.</p>
    <p class="explanation">The email should include any event specific information, including any payment details, 
      special timings, directions, special instructions, etc.</p>
  <% when 'paid'%>
    <p>Once the registration has been marked paid, this email will get sent to them.  If it's left empty, no email will be sent.</p>
  <% when 'waitlisted' %>
    <p class="explanation">If the event becomes full, you can place someone on the waitlist.</p>
  <% when 'rejected' %>
    <p class="explanation">If you reject the registration, this email will get sent to them.  If it's left empty, no email will be sent.
      You should then notify as you see fit.</p>
<% end %>

<% submit_url = edit_system_email_admin_workshop_path(@workshop) %>
<%= simple_form_for(@system_email, :url => submit_url) do |f| %>
  <%= f.error_notification :message => "Please review the problems below"%>
  <%= content_box :title => "#{@system_email.email_type.capitalize} Email" do %>

    <%= locale_frame :title => '' do |locale| %>
      <%= f.input "subject_#{locale}", :label => 'Email Subject', :id => 'title_error', :required => true %>
      <%= f.input "body_#{locale}", :label => 'Email Body', :hint => 'Markdown format', :wrapper => :vertical, :as => :text_full_width, :mono => true, :rows => 4 %>
    <% end %>

    <%= submit_or_cancel :cancel_url => admin_workshop_path(@workshop) %>

  <% end %>
<% end %>